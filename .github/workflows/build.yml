name: CI
on: { push: { branches: [main] } }
permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest
    defaults: { run: { shell: bash } }
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Clone Submodules
        run: git submodule update --init --depth=1 --recursive
      - name: Startup
        run: |
          sudo apt-get install mingw-w64 libc6-dev-i386
          export VERSION=`git describe HEAD --tags` && echo VERSION=`git describe HEAD --tags` >> $GITHUB_ENV
          export LPM_CACHE=/tmp/lpm && echo "LPM_CACHE=/tmp/lpm" >> $GITHUB_ENV
          curl -L https://github.com/lite-xl/lite-xl-plugin-manager/releases/download/latest/lpm.x86_64-linux > lpm && chmod +x lpm
          ./lpm init --quiet && ./lpm add . https://github.com/adamharrison/lite-xl-libgit2 --quiet
      - name: Build Linux
        env: { PLATFORM: "x86_64-linux", BIN: "write-xl" }
        run: |
          mkdir scratchpad && cp -rL lib/lite-xl-android/lib/lite-xl-simplified scratchpad/lite-xl && ./lpm install write-xl --datadir scratchpad/lite-xl/data --userdir scratchpad/lite-xl/data --arch $PLATFORM --quiet && cd scratchpad/lite-xl
          ./build.sh -DLITE_VERSION='"'$VERSION-$PLATFORM'"' -DLITE_ALL_IN_ONE && tar -czvf ../../write-xl-$PLATFORM.tar.gz $BIN && cd ../.. && rm -rf scratchpad
      - name: Build Windows
        env: { PLATFORM: "x86_64-windows", CC: "x86_64-w64-mingw32-gcc", AR: "x86_64-w64-mingw32-gcc-ar", SDL_CONFIGURE: "--host=x86_64-w64-mingw32", BIN: "write-xl.exe" }
        run: |
          mkdir scratchpad && cp -rL lib/lite-xl-android/lib/lite-xl-simplified scratchpad/lite-xl && ./lpm install write-xl --userdir scratchpad/lite-xl/data --arch $PLATFORM && cd scratchpad/lite-xl
          ./build.sh -DLITE_VERSION='"'$VERSION-$PLATFORM'"' -DLITE_ALL_IN_ONE && zip ../../write-xl-$PLATFORM.zip $BIN && cd ../.. && rm -rf scratchpad
      - name: Build APK
        run: |
          ./build.sh
      - name: Create Release
        env: { GITHUB_TOKEN: "${{ github.token }}" }
        run: |
          git config --global user.name "Github Actions" && git config --global user.email "adamdharrison@gmail.com"
          gh release delete -y continuous || true; gh release create -t 'Continuous Release' -n 'A continuous release of write-xl. See the README for more details.' continuous  *.zip *.tar.gz *.apk
          if [[ `git tag --points-at HEAD | head -c 1` == "v" ]]; then
            gh release delete -y $VERSION || true;
            gh release create -t $VERSION $VERSION *.apk *.zip *.tar.gz
            gh release delete -y latest || true;
            gh release create -t latest latest *.apk *.zip *.tar.gz
            git branch -f latest HEAD
            git tag -f latest
            git push -f origin refs/heads/latest
            git push -f origin refs/tags/latest
          fi

